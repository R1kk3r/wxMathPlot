Version 0.04 - 2007-DEC-??
* Behavior on window resize changed: it tries to keep constant the view area, keeping the x/y ratio if lock aspect is true.
   Together with the new "fit" behavior, mpWindow now resembles the way MATLAB figures manage resizes.
* Added a new "Fit" method for custom bounding boxes (exploited internally to mouse rectangular zoom).
* Scroll-bars removed. They are quite inconsistent with the possibility of arbitrary mouse-driven pan. Should they be enabled again under some circumstances??
* The commands "Zoom In/Out" with the mouse (from the menu and the wheel) now preserve the position on the screen of the clicked point (more intuitive).
* The methods "ZoomIn/ZoomOut" now accept a "center point".
* Added the methods p2x,p2y,x2p and y2p to convert between layer & pixel coordinates. 
   Repeated formulas all across the sources have been replaced by calls to this inline functions.
* wxDC coordinate origin fixed to the top-left corner in all cases (the default in wxWidgets), avoiding all the calls to "SetDeviceOrigin".
* BIG FIXED: Rectangular zoom (method ZoomRect) only changed the scale, not the mpWindow starting point. 
   It now supports both aspect locked and not aspect locked rectangular zooms.
* Added static member "zoomIncrementalFactor" to allow users to modify the ratio of each zoom in/out step.
* When "LockAspect" is enabled, the scale of X/Y is kept to the lower of them instead of their average.
* BUG FIXED: Fit now actually fits the whole bounding boxes for aspect locked graphs.
* Makefile updated to automatically build samples
* BUG FIXED: mpFXYVector didn't draw the last point in the vector.
* Added a new method to delete all the layers of a mpWindow (mpWindow::DelAllLayers).
* All the layers are deleted at the mpWindow destructor. (OK?)
* The type for the list of "mpLayer*" has been moved from a wxMap to a standard STL std::deque. 
   This is because the hash map was being used just to access by layer index, which can be also performed 
   through the deque index, and to avoid the "type punned" warnings derived from the wxHashMap declaration.
* Added a new option to "AddLayer" to avoid refreshing the display. Default behavior is to refresh, i.e. backwards compatible.
* Added "-Wall" to the Makefile.
* A MS Visual Studio 2005 solution has been created for the library and the three examples ("mathplot.sln").
* A new example "sample3" has been added to demonstrate a moving "car" over a background occupancy gridmap.
* New class "mpBitmapLayer" displays an image in a given rectagular area in graph coordinates.
* New class implementing "mpMovableObject": "mpPolygon" an arbitrary shape (or a cloud of points if m_continuity=false). 
  This class is esentially similar to mpFXY, but mpMovableObject-capable.
* New class implementing "mpMovableObject": "mpCovarianceEllipse" a 2D ellipse given by its covariance matrix.
* A new virtual class "mpMovableObject" has been introduced for translating and rotating objects (a 2D rigid transformation).
* A new option added to mpLayer, for optionally disabling showing the name of the layer if it is not null (prior default behavior).
  This option is accesible through mpLayer::ShowName. By default, all classes has m_showName set to true (compatible with existing code).
* Added options to "mpWindow::DelLayer" to allow the automatic deletion of the layer object, and to avoid the automatic refresh of the window.
   The default parameters make this method compatible with prior code.
* Added a method for retrieving a given mpLayer from a mpWindow by its name (mpWindow::GetLayerByName).
* Added printing support through class mpPrintout
* Added methods for rectangular zoom and separated X and Y zoom
* Fixed text in message box explaining mouse commands 

Version 0.03 - 2007-09-11
* Added mpWindow::GetLayer to extract the pointer to a layer and call directly its methods. Please note that you shoud know the position of the layer inside the list whis is internal to mpWindow, but it matches to the order you add layers to the window.
* Added management for axes position: now axes can be set to be fixed to the borders of he window, or close to them with a small offset, even if you zoom or change the window size. The old behavior is set through mpALIGN_CENTER.
* Inside mpScaleX and mpScaleY now it is possible to activate dotted grid lines instead of the axes ticks. This is achieved through the "ticks" flag in the constructor, or through the methods SetTicks and GetTicks.
* A new class is available to plot data, calling mpProfile. It is intended to remove the limit of mpFX, which draws one point per X-scale pixel. This means that if your function has a local high value of derivative (i.e. delta Y is more than noe pixel in scale), the curve appears to be discontinous. mpProfile draws the curve by lines.
* Corrected the "Lock-aspect menu non-checking" bug.
* mpWindow has built-in support for mouse-based navigation (pan and zoom). 
Â  This can be optionally disabled.
* mpWindow has "doubleBuffer" support (default=disabled).
* A new property in mpLayer for the "continuity" of 2D graphs. It can 
select between drawing a set of separate points, or drawing them as a continuous line.
* Formula fixed in mpWindow::UpdateAll.
* A new layer class (mpFXYVector) for drawing 2D graphs from two vectors X and Y.
* Changes in mpWindow to reduce redundant OnPaint's.
* Added a macro "MATHPLOT_DO_LOGGING" for enable debug messages. 
* Added a class mpText which allows to put a text string on a fixed position within the plot frame. In fact, the position is given in percentage of height and width.

Version 0.02 - 2007-06-13
* Added "debug" target in Makefile, to allow debugging of wxMathPlot;
* Added method mpWindow::CountLayers, which returns layers number, excluding
axes;
* Removed dc.BeginDrawing() and dc.EndDrawing() in mpWindow::OnPaint, which
are reprecated methods in wxWidgets recent versions;
* Re-implemented m_layers as a wxHashMap, removing deprecated wxList,
because it caused some obscure crashes. All methods using it were corrected;
* Introduced in mpLayer methods GetXscl(), GetYscl(), GetXpos() and
GetYpos(), replacing respectively GetScaleX(), GetScaleY(), GetPosX() and
GetPosY(), because the old methods sometimes return some obscure zero
values. I guess the compiler confuses them with other methods inside the
wxWidgets inheritance tree. New methods does exactly the same things, but
appears to be more reliable.
